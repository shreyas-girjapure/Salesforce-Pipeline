name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  Formatting-and-Verifications:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Cache node_modules to speed up the process
      - name: "Restore node_modules cache"
        id: cache-npm
        uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ env.cache-name }}-
            npm-
      # Install npm dependencies for Prettier and Jest
      - name: "Install npm dependencies"
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: |
          echo "Installing npm dependencies",
          npm install
      # Prettier formatting
      - name: "Code formatting verification with Prettier"
        run: npm run prettier
      # Lint LWC
      - name: "Lint Lightning Web Components"
        run: npm run lint
      # Commit Changes Code
      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          message: "Formatted Code"

  Create-Package:
    runs-on: ubuntu-latest
    needs: Formatting-and-Verifications
    steps:
      - uses: actions/checkout@v2
      # Install Salesforce CLI
      - name: "Install Salesforce CLI"
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: "Checkout source code"
        uses: actions/checkout@v2
      # Login To ORG
      - name: Login to org
        id: loginToOrg
        uses: sfdx-actions/setup-sfdx@v1
        with:
          sfdx-auth-url: ${{ secrets.AUTH_SECRET }}
      # Convert Source to metadata
      - name: "Convert Source"
        id: convertSource
        if: success()
        run: |
          echo "Coverting source to metadata format"
          FILE=$GITHUB_WORKSPACE/package/package.xml
          sfdx force:source:convert -d deploy_code -x 

      # Check validate package
      - name: "Deploy package"
        id: deployPackage
        if: success()
        run: |
          sfdx force:mdapi:deploy -d deploy_code -u SFDX-ENV -w 5 -l RunLocalTests
      # Running Local Tests
      - name: Runtests
        if: success()
        run: |
          sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20
      # Upload code coverage data
      - name: "Upload code coverage for Apex to Codecov.io"
        uses: codecov/codecov-action@v2.0.2
        with:
          flags: Apex
